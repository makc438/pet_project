-- Analyze Phase --

-- Riders by member and casual users
SELECT
COUNT(ride_id) AS no_of_riders_,
member_casual
FROM cyclistic_bike
GROUP BY member_casual;

-- Rideable-type by members and casual users
SELECT
COUNT(ride_id) AS no_of_riders,
rideable_type,
member_casual
FROM cyclistic_bike
GROUP BY
rideable_type,
member_casual
ORDER BY
COUNT(ride_id) DESC;

-- Average ride lenght
SELECT member_casual,
	ROUND(MAX(DATEDIFF(second, started_at, ended_at) / 60.0), 2) AS avg_ride_length,
	ROUND(MIN(DATEDIFF(second, started_at, ended_at) / 60.0), 2) AS avg_ride_length,
	ROUND(AVG(DATEDIFF(second, started_at, ended_at) / 60.0), 2) AS avg_ride_length
FROM cyclistic_bike
GROUP BY member_casual;

-- Mostly used start station by member and casual users
SELECT TOP 10
COUNT(ride_id) AS no_of_riders,
start_station_name,
member_casual
FROM cyclistic_bike
GROUP BY
start_station_name,
member_casual
ORDER BY
COUNT(ride_id) DESC;

-- Mostly used end station by member and casual users
SELECT TOP 10
COUNT(ride_id) AS no_of_riders,
end_station_name,
member_casual
FROM cyclistic_bike
GROUP BY
end_station_name,
member_casual
ORDER BY
COUNT(ride_id) DESC;


-- Starter time analysis by member and casual users
-- Month analysis
SELECT
COUNT(ride_id) AS no_of_users,
DATEPART(MONTH, started_at) AS Starter_month,
member_casual
FROM cyclistic_bike
GROUP BY
member_casual,
DATEPART(MONTH, started_at)
ORDER BY COUNT(ride_id) DESC;

-- Day analysis
SELECT
COUNT(ride_id) AS no_of_users,
DATEPART(WEEKDAY, started_at) AS Starter_day,
member_casual
FROM cyclistic_bike
GROUP BY
member_casual,
DATEPART(WEEKDAY, started_at)
ORDER BY COUNT(ride_id) DESC;

-- Hour analysis
SELECT
COUNT(ride_id) AS no_of_users,
DATEPART(HOUR, started_at) AS Starter_hour,
member_casual
FROM cyclistic_bike
GROUP BY
member_casual,
DATEPART(HOUR, started_at)
ORDER BY COUNT(ride_id) DESC;

-- Ended time analysis by member and casual users
-- Month analysis
SELECT
COUNT(ride_id) AS no_of_users,
DATEPART(MONTH, ended_at) AS ended_month,
member_casual
FROM cyclistic_bike
GROUP BY
member_casual,
DATEPART(MONTH, ended_at)
ORDER BY COUNT(ride_id) DESC;

-- Day analysis
SELECT
COUNT(ride_id) AS no_of_users,
DATEPART(WEEKDAY, ended_at) AS ended_day,
member_casual
FROM cyclistic_bike
GROUP BY
member_casual,
DATEPART(WEEKDAY, ended_at)
ORDER BY COUNT(ride_id) DESC;

-- Hour analysis
SELECT
COUNT(ride_id) AS no_of_users,
DATEPART(HOUR, ended_at) AS ended_hour,
member_casual
FROM cyclistic_bike
GROUP BY
member_casual,
DATEPART(HOUR, ended_at)
ORDER BY COUNT(ride_id) DESC;
